#!/usr/bin/env python
"""
Runs 'du' to report both actual and logical disk usage, and their ratio.
Default to comma-formatted number of bytes.

For a ZFS volume with compression, actual<logical and the ratio
(logical/actual) is the compression ratio.
(question: does this work for other types FS-level compression?)

For non-compressed volumes, typically actual>logical because of per-file
overhead or other forms of overhead.

Can give this script arguments which are passed to du.  Has not been tested
with all arguments.
"""
from __future__ import division
import sys,subprocess,re,itertools,os
args = sys.argv[1:]

if '-b' in args:
    print>>sys.stderr, "dont use -b, it screws things up. instead use --block-size=1"
    sys.exit(1)

COMMAS = False

if not any(x.startswith("-") for x in args):
    COMMAS = True
    args = ['--block-size=1'] + args

popen = lambda myargs: subprocess.Popen(myargs, stdout=subprocess.PIPE, bufsize=1)

DU_CMD = "du"
if 'darwin' in sys.platform:
    if os.system("which gdu >/dev/null 2>&1")==0:
        DU_CMD = "gdu"
    else:
        assert False, "OSX du won't work. please get GNU du installed as 'gdu', e.g. from brew install coreutils."

apparent_sizes = popen([DU_CMD, "--apparent-size", "--block-size=1",] + args).stdout
disk_usage     = popen([DU_CMD, "--block-size=1",] + args).stdout

def getnum(s):
    if isinstance(s, (int,float)): return s
    mult =  1024**4 if s.endswith("T") else \
            1024**3 if s.endswith("G") else \
            1024**2 if s.endswith("M") else \
            1024    if s.endswith("K") else \
            1
    return int(float(re.sub(r'[^\.0-9]*$',"",s)) * mult)

if COMMAS: 
    minpad = 14 + 4
else:
    minpad = 7

for apparent,disk in itertools.izip(apparent_sizes,disk_usage):
    asize,name1 = apparent.rstrip("\n").split("\t")
    dsize,name2 = disk.rstrip("\n").split("\t")
    assert name1==name2
    if COMMAS:
        asize=getnum(asize)
        dsize=getnum(dsize)
        fmt ="{:{w},}\t{:{w},}\t{}\t (ratio {:.2f})"
    else:
        fmt = "{:{w}}\t{:{w}}\t{}\t (ratio {:.2f})"
    ratio = getnum(asize)/getnum(dsize) if getnum(dsize)>0 else -1
    print fmt.format(dsize,asize,name1, ratio, w=minpad)
    sys.stdout.flush()

